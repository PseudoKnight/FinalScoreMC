# Set game mode for players
*:/gamemode [$] = call_alias('/gm '.$)
*:/gm [$] = >>>
	if(!has_permission('command.gm')) {
		die('You do not have permission.');
	}

	@player = player();
	@mode = 'toggle';
	if($) {
		@args = parse_args($);
		try {
			@player = player(@args[0])
			if(@player != player() && !has_permission('command.gm.others')) {
				die('You do not have permission to set another\'s game mode.');
			} else if(pworld(@player) != pworld()) {
				die('You do not have permission to set another\'s game mode in another world.');
			}
			if(array_size(@args) >= 2) {
				@mode = @args[1];
			}
		} catch(PlayerOfflineException @ex) {
			if(is_numeric(@args[0])) {
				@mode = @args[0];
			} else {
				die('Who is that? Are they online?');
			}
		}
	}

	switch(to_lower(@mode)) {
		case '0':
		case 's':
			@mode = 'SURVIVAL';

		case '1':
		case 'c':
			@mode = 'CREATIVE';

		case '2':
		case 'a':
			@mode = 'ADVENTURE';

		case '3':
			@mode = 'SPECTATOR';

		case 'toggle':
			@world_mode = _worlds_config()[pworld()]['mode'];
			if(pmode(@player) == @world_mode) {
				if(@world_mode == 'CREATIVE'){
					@mode = 'SURVIVAL';
				} else {
					@mode = 'CREATIVE';
				}
			} else {
				@mode = @world_mode;
			}

		default:
			die('Usage: /gm <player> [mode] OR /gm [mode]');
	}

	set_pmode(@player, @mode);
	if(@player != player()) {
		msg('Set '.@player.'\'s game mode to '.@mode);
	}
<<<

# Set the time of day for this world
*:/time set $time = call_alias('/time '.$time);
*:/time $time = >>>
	try {
		if(has_permission('command.time')) {
			set_world_time(pworld(), $time);
			msg('Set world time to '.$time);
		} else if(!_is_survival_world(pworld())){
			set_ptime(player(), $time);
			msg('Set your visible time to '.$time);
		} else {
			die(color('gold').'You do not have permission to set this world\'s time.');
		}
	} catch(FormatException @ex) {
		msg('Usage: /time <day|night|sunrise|sunset|0-24000>');
	}
<<<

# Enchant tool in hand with specified enchantment
*:/enchant [$type='list'] [$level=1] = >>>
	if(!has_permission('command.items')) {
		die('You are not allowed to create custom items here.');
	}
	if(!$type) {
		die(color('gold').'Usage: /enchant <type> [level]\n'
		.'Example: /enchant sharpness 4');
	}
	@item = pinv(player(), null);
	if(!@item) {
		die('You must hold an item.');
	}
	@enchants = associative_array(
		'power': 'ARROW_DAMAGE',
		'flame': 'ARROW_FIRE',
		'infinity': 'ARROW_INFINITE',
		'punch': 'ARROW_KNOCKBACK',
		'sharpness': 'DAMAGE_ALL',
		'baneofarthropods': 'DAMAGE_ARTHROPODS',
		'smite': 'DAMAGE_UNDEAD',
		'efficiency': 'DIG_SPEED',
		'unbreaking': 'DURABILITY',
		'fireaspect': 'FIRE_ASPECT',
		'knockback': 'KNOCKBACK',
		'fortune': 'LOOT_BONUS_BLOCKS',
		'looting': 'LOOT_BONUS_MOBS',
		'respiration': 'OXYGEN',
		'protection': 'PROTECTION_ENVIRONMENTAL',
		'blastprotection': 'PROTECTION_EXPLOSIONS',
		'featherfalling': 'PROTECTION_FALL',
		'fireprotection': 'PROTECTION_FIRE',
		'projectileprotection': 'PROTECTION_PROJECTILE',
		'silktouch': 'SILK_TOUCH',
		'thorns': 'THORNS',
		'aquaaffinity': 'WATER_WORKER',
		'depthstrider': 'DEPTH_STRIDER',
		'mending': 'MENDING',
		'frostwalker': 'FROST_WALKER',
		'sweepingedge': 'SWEEPING_EDGE',
	);
	if(!is_integral($level)) {
		die('Enchantment level must be an integer.');
	}
	@level = clamp(integer($level), 1, 99);
	if(array_index_exists(@enchants, to_lower($type))) {
		enchant_inv_unsafe(null, @enchants[to_lower($type)], @level);
	} else {
		msg(color('red').'Available enchantments: '.array_keys(@enchants));
	}
<<<

*:/up [$amount=0] = >>>
	if(pmode() != 'CREATIVE') {
		die(color('gold').'You are not in CREATIVE mode.');
	}
	@loc = _relative(ploc(), 'up', integer($amount));
	set_ploc(@loc);
	if(@loc['y'] > 255 || !sk_can_build(@loc)) {
		set_pflying(true);
	} else {
		set_block_at(@loc, '95:8');
	}
<<<
