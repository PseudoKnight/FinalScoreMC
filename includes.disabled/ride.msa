/*
	Spawns an npc and carries the player along the course specified
	/ride @p npcType 0,64,0 0,64,100
*/
/ride $player $npcType $speed $ = >>>
	if(extension_exists('CHCitizens')) {

	if(psneaking($player)) {
		die();
	}

	@path = parse_args($);
	@npc = ctz_create_npc($npcType, $player.'\'s Ride');
	if(is_null(@npc)) {
		die();
	}
	@loc = get_command_block();
	@loc = array(@loc[0] + 0.5, @loc[1] + 2, @loc[2] + 0.5, @loc[3]);
	ctz_spawn_npc(@npc, @loc);
	if(!ctz_npc_is_spawned(@npc)) {
		# Something went wrong.
		ctz_remove_npc(@npc);
		die();
	}
	set_entity_rider(ctz_npc_entity_id(@npc), puuid($player));
	ctz_set_npc_range(@npc, 64);
	ctz_set_npc_speed_modifier(@npc, $speed);
	set_timeout(50, closure(){
		@targetLoc = split(',', @path[0]);
		@targetLoc[3] = @loc[3];
		ctz_set_npc_face_loc(@npc, @targetLoc);
		set_timeout(1000, closure(){
			try {
				ctz_set_npc_target(@npc, @targetLoc);
				array_remove(@path, 0);
			} catch(BadEntityException @ex) {
				// already removed or unloaded
			}
		});
	});

	proc _remove_npc(@npc) {
		unbind(@npc.'nav');
		unbind(@npc.'despawn');
		# delay so citizens doesn't give an error updating NPC
		set_timeout(50, closure(){
			ctz_remove_npc(@npc);
		});
	}

	bind(ctz_npc_navigation_complete, array('id': @npc.'nav'), array('world': pworld($player)), @e, @npc, @path) {
		if(@e['npc'] == @npc) {
			if(get_entity_rider(ctz_npc_entity_id(@npc)) == null) {
				_remove_npc(@npc);
				die();
			}

			if(array_size(@path) > 0) {
				ctz_set_npc_target(@npc, split(',', @path[0]));
				array_remove(@path, 0);
			} else {
				_remove_npc(@npc);
			}
		}
	}

	bind(ctz_npc_despawn, array('id': @npc.'despawn'), array('world': pworld($player)), @e, @npc) {
		if(@e['npc'] == @npc) {
			_remove_npc(@npc);
		}
	}

	}
<<<
