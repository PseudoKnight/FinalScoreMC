*:/perm [$action] [$arg1] [$arg2] = >>>
	if(!has_permission('group.admin')) {
		die('You do not have permission.');
	}
	switch($action) {
		case 'reload':
			msg(color('e').'Reloading permissions...');
			include('includes.library/procedures.ms');
			@perms = yml_decode(read('config.yml'));
			export('perms', @perms);
			foreach(@p in all_players()) {
				_perm_player(@p);
			}
			msg(color('a').'Config reloaded and new permissions applied to players.');

		case 'setgroup':
			include('includes.library/procedures.ms');
			if(@oldgroup = _set_group($arg1, $arg2)) {
				msg('Changed group from '.@oldgroup.' to '.$arg2);
			} else {
				msg('Could not set player\'s group to '.$arg2);
			}

		case 'ingroup':
			include('includes.library/procedures.ms');
			@group = to_lower($arg1);
			x_new_thread('players_in_group', closure(){
				msg('Players in "'.@group.'" group: '._players_in_group(@group));
			});

		case 'havegroup':
			include('includes.library/procedures.ms');
			@group = to_lower($arg1);
			x_new_thread('players_have_group', closure(){
				msg('Players that have "'.@group.'" perms: '._players_have_group(@group));
			});

		default:
			msg(colorize(
				'&7/perm reload &rReload configuration and reassign permissions\n'
				.'&7/perm setgroup <p> <g> &rAssign this group to a player\n'
				.'&7/perm ingroup <g> &rLists all players assigned to this group\n'
				.'&7/perm havegroup <g> &rLists all players that have this group'
			));
	}
<<<

# APPROVAL SYSTEM #
*:/approve [$player] = >>>
	if(!has_permission('group.regular')) {
		die('You do not have permission to use this command.');
	}
	try {
		@player = player($player);
	} catch(PlayerOfflineException @ex) {
		die('Unknown player.');
	}
	if(@player == player()) {
		die('Are you that desperate for approval?');
	}
	include('includes.library/procedures.ms');
	if(_set_group(@player, 'member', true)) {
		msg(color('green').'Added player.');
		tmsg(@player, 'You have been added to the whitelist by ', color('e'), player(), color('f'), '.');
		if(!has_permission('group.moderator')) {
			@pdata = _pdata(@player);
			@pdata['approval'] = player();
			_store_pdata(@player, @pdata);
		}
	}
<<<
