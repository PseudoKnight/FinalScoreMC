/safereload [$force]= >>>
  if(!$force) {
    import(@currentspleef)
    if(@currentspleef != false && array_size(@currentspleef) >= 1, die('Spleef in progress.'))
    @arenas = get_values('arena')
    foreach(array_keys(@arenas), @key,
      @pvp = import('pvp'.split('.', @key)[1])
      if(@pvp && @pvp['running'] == true, die(to_upper(split('.', @key)[1]).' in progress.'))
    )
    @cluck = import(@cluck)
    if(@cluck && (@cluck['active'] == 1 || @cluck['round'] > 1), die('Cluck in progress.'))
  }
  import(@requests)
  if(is_array(@requests), store_value('session.requests', @requests))
  import(@conv)
  if(is_array(@conv), store_value('session.conv', @conv))
  import(@stopwatch)
  if(is_array(@stopwatch), store_value('session.stopwatch', @stopwatch))
  run('/reloadaliases')
<<<

/s $name $ = >>>
  broadcast(color(8).simple_date('h:mm').color('gray').' [console] '.color('aqua').$name.color('gray').': '.color('r').$) 
<<<

*:/say $ = >>>
  broadcast(color(8).simple_date('h:mm').' '._colorname().player().color('gray').': '.color('r').$) 
<<<

/sayas $from $to $ = >>>
  tmsg($to, color('gray').$from.': '.color('r').colorize($))
<<<

#Runs the help procedure to list or display entries
*:/help [$selection='help'] = >>>
  assign(@help, array(
    'rules':
     '- Do NOT break anything someone else placed unless otherwise specified.\n'.
     '- Do NOT take anything from a chest that you did not place there, unless otherwise specified or was generated in the world naturally.\n'.
     '- Do NOT harass, call others names, use hate speech, spam, or use excessive adult language in chat.\n'.
     '- Do NOT actively use cheat modifications to do things like fly or look through walls.\n'.
     '- DO respect other players and apologize if you make a mistake, as we have all made them.',
    'homes': 'You can have one home per world. Set them by typing "/sethome", then "/home" to teleport to them. You can teleport to homes of other players by typing in their name after "/home".',
    'messages': 'Send a private message to another player with "/msg <playername> <message>" or "@playername <message>". You can use "/r <message>" for a reply.',
    'spawn': 'There is one central spawn on each world, including nethers. Type "/spawn" to teleport to the spawn of the world you are in or follow it with a world name to teleport there.',
    'stargate': 'Stargates are special portals you build to teleport within a network of locations. There is a more detailed guide on the website. But to make one, first build the gate as seen (without sign or button), place a sign on the correct location, then type the gate name on line one and the gate network name on line three.',
    'private-chests': 'You can put a [private] sign on a chest, furnace, and the block above/below doors. The following lines after [private] should contain the players you want to give access.',
    'shops': 'Chest shops allow players to buy and sell different items using currency. (g: gold, d: diamond, i: iron, e: emerald) Right click the SIGN with the currency in hand to BUY. There\'s a detailed guide on the website.',
    'website': 'The website is at >>> http://finalscoremc.com <<< There you can find a command reference, guides, videos, live maps, and more.',
    'live-map': '>>> http://mc.finalscoremc.com:25966 <<< The website has a handy live map that shows the location of players and their homes, among other things.',
    'moderators': 'Admins: PseudoKnight, Scottyd_Utah, Nefyoni, asdialed; Moderators:TobyTobey, fredwaffles, TrulyAnnoying.',
    'plugins': 'Type "/plugins" for a full list of plugins installed, or check the website for more details.',
    'permissions': 'We currently have 7 groups: Everyone (new players, restricted), Regulars, Donors (green names), Builders (orange names), Engineers (also orange), Moderators (blue names), and Administrators (also blue names). New players get bumped up to the Regulars group after some time, as long as they\'re not causing trouble.',
    'mumble': 'Everyone is welcome to use our voice chat server using Mumble. The server is at mum.finalscoremc.com with port 64758. You can get Mumble at >>> http://mumble.sourceforge.net <<<',
    'regions': 'Regions are protected zones where only owners and members can build or access chests. You can create your own region by using a wood axe, left and right clicking to select a cuboid for the region, then use "/rg claim <regionid>". More details are on the website.',
    'spleef': 'Spleef is a game where you try and dig out the blocks from under other players so that they fall. There is an automated arena for this at the Colosseum at Final City. Type "/warp spleef" to get there quickly.',
    'whitelist': 'You can get on the whitelist by asking a moderator or requesting it on the http://myextralife.com whitelist forum thread.',
    'worlds': 'There are three primary worlds: Alpha (Plaza at spawn), Delta (Final City at spawn), and Gamma (Gamma City at spawn). In addition, there are three respective nether dimensions and one End dimension. You can type "/mv who" to see which worlds players are on.',
    'world-seeds': 'These are the seeds for the three main worlds -- Alpha: -621778714517541268, Delta: -8443156782283251243, Gamma: -754633420005903009.'
  ))
  if(equals($selection, 'help'), 
    msg(color('a'), 'Get help on any of these topics:')
    msg(color('6'), array_implode(array_keys(@help), ' ')),
    try(msg(to_upper($selection).': '.color('a'), @help[to_lower($selection)]), @ex, msg(color('c'), 'Unknown entry. Type "/help" to find available entries.')))
<<<

/donor $player $amount = >>>
  if(!has_permission('group.administrators'), die('You do not have permission to use this command.'))
  acc_add($player, $amount * 100)
  msg('Gave '.$player.' '.$amount * 100.' coins.')
  console('Gave '.$player.' '.$amount * 100.' coins.')
  if(ponline($player) && array_size(pgroup($player)) > 3) {
    msg('Player is already in an elevated group. If you still want to assign them to Donors, please do that manually with "/perm player setgroup '.$player.' Donors".')
    msg('Groups: '.pgroup($player))
  } else {
    run('/perm player setgroup' $player 'Donors')
  }
  assign(@donors, get_value('donors'))
  if(@donors == null || @donors == array()) {
    assign(@donors, array($player))
  } else {
    array_push(@donors, $player)
  }
  store_value('donors', @donors)
<<<

*:/spawn [$world] = >>>
  assign(@blockedworlds, array('outworld', 'outworld_nether', 'outworld_the_end'))
  ifelse(array_contains(@blockedworlds, $world) || array_contains(@blockedworlds, pworld()),
    msg('You cannot teleport directly to or from that world.'),
  $world,
    assign(@world, _worldid($world))
    if(!array_contains_ic(get_worlds(), @world), die('Failed to find a world called '.$world.'.'))
    _warmuptp(2, player(), get_spawn(@world))
    msg('Teleporting to '.$world.'\'s spawn...'),
  _warmuptp(2, player(), get_spawn())
  msg('Teleporting to '._worldname(pworld()).'\'s spawn...')
  )
<<<

*:/warp $warp = >>>
  msg('Attempting to warp...')
  set_peffect(player(), 9, 1, 5)
  set_timeout(2 * 1000, closure(
    make_effect(ploc(), 'GHAST_SHOOT', 20)
    run('/warp '.$warp)
    set_peffect(player(), 15, 1, 1)
    make_effect(ploc(), 'GHAST_SHOOT', 20)
  ))
<<<

*:/home [$home=''] = >>>
  msg('Teleporting...')
  set_peffect(player(), 9, 1, 5)
  set_timeout(2 * 1000, closure(
    make_effect(ploc(), 'GHAST_SHOOT', 20)
    run('/home '.$home)
    set_peffect(player(), 15, 1, 1)
    make_effect(ploc(), 'GHAST_SHOOT', 20)
  ))
<<<

/coins [$] = /econ $

#Database control
/sql $action $namespace [$] = >>>
  if(!pisop(), die('You do not have permission.'))
  assign(@data, get_values($namespace))
  if(array_size(@data) == 0, die('No keys for that namespace.'))
  switch($action,
  , 'delete',
    foreach(@data, @key, @value,
      clear_value(@key)
    )
    msg('Deleted '.$namespace)
  , 'rename',
    foreach(@data, @key, @value,
      store_value(reg_replace($namespace, $, @key), @data[@key])
      clear_value(@key)
    )
  , 'indexchild',
    foreach(@data, @key, @value,
      @array[$] = @value
      store_value(reg_replace('.'.$, '', @key), @array)
      clear_value(@key)
    )
  )
<<<

# MUTING
*:/ignore $player = >>>
  try(assign(@player, player($player)), die('No player found.'))
  import(@ignorelist)
  if(!array_index_exists(@ignorelist, @player)) {
    array_set(@ignorelist, @player, array())
  }
  if(array_contains_ic(@ignorelist[@player], player()), die('You are already ignoring '.@player.'.'))
  array_push(@ignorelist[@player], player())
  msg('You are now ignoring '.@player.'.')
  export(@ignorelist)
<<<

*:/unignore $player = >>>
  try(assign(@player, player($player)), die('No player found.'))
  import(@ignorelist)
  if(!array_index_exists(@ignorelist, @player), die('That player wasn\'t ignored by anyone.'))
  if(!array_contains_ic(@ignorelist[@player], player()), die('You have not ignored that player.'))
  for(assign(@i, 0), @i < array_size(@ignorelist[@player]), @i++,
    if(@ignorelist[@player][@i] == player()) {
      array_remove(@ignorelist[@player], @i)
      msg('You are no longer ignoring '.@player.'.')
      break()
    }
  )
  export(@ignorelist)
<<<

*:/mute $player = >>>
  if(!has_permission('group.moderators'), die('You do not have permission to use this command.'))
  try(assign(@player, player($player)), die('No player found.'))
  import(@ignorelist)
  if(!array_index_exists(@ignorelist, @player)) {
    array_set(@ignorelist, @player, array())
  }
  if(array_contains(@ignorelist[@player], 'all'), die('Already muted.'))
  array_push(@ignorelist[@player], 'all')
  msg(@player.' is now muted.')
  export(@ignorelist)
<<<

*:/unmute $player = >>>
  if(!has_permission('group.moderators'), die('You do not have permission to use this command.'))
  try(assign(@player, player($player)), die('No player found.'))
  import(@ignorelist)
  if(!array_index_exists(@ignorelist, @player) || !array_contains(@ignorelist[@player], 'all'), die('That player isn\'t muted.'))
  for(assign(@i, 0), @i < array_size(@ignorelist[@player]), @i++,
    if(@ignorelist[@player][@i] == 'all') {
      array_remove(@ignorelist[@player], @i)
      msg(@player.' is no longer muted.')
      break()
    }
  )
  export(@ignorelist)
<<<

# APPROVAL SYSTEM #
*:/approve [$player] = >>>
  if(!has_permission('group.regulars'), die('You do not have permission to use this command.'))
  if($player) {
    if(not(ponline($player)), die('That player is not online. Did you misspell their name?'))
    if(array_contains_ic(pgroup($player), 'Everyone'), die('Player already exists in whitelist.'))
    sudo('/perm player setgroup' $player 'Everyone')
    tmsg($player, 'You have been added to the whitelist by ', color(e), player(), color(f), '.')
    if(!has_permission('group.moderators')) {
      assign(@key, concat('approvals.', to_lower($player)))
      store_value(@key, player())
    }
  } else {
    @approvals = get_values('approvals')
    foreach(@approvals, @key, @value,
      msg(split('.', @key)[1].' approved by '.@value)
    )
  }
<<<

# Put whatever they have in their hand onto their head. This shouldn't dupe.
*:/hat = >>>
  if(pinv(player(), null) == null, die(color('gold').'You need to hold something before you can put it on your head.'))
  if(pinv(player(), 103) != null, die(color('gold').'You already have something on your head.'))
  assign(@inv, pinv(player(), null))
  if(@inv['qty'] == 1) {
    set_pinv(player(), array(null: null))
    set_pinv(player(), array(103: @inv))
  } else {
    array_set(@inv, 'qty', @inv['qty'] - 1)
    set_pinv(player(), array(null: @inv, 103: array('type': @inv['type'], 'data': @inv['data'], 'qty': 1)))
  }
  msg(color('gold').'Fancy!')
<<<

# PLAYER LISTS #
*:/who = >>>
  assign(@list, array(array('Administrators', 'b', ''), array('Moderators', 'b', ''), array('Donors', 'a', ''), array('Engineers', '6', ''), array('Builders', '6', ''), array('Regulars', 'e', ''), array('Everyone', 'e', ''), array('Default', 'f', '')))
  assign(@allplayers, all_players())
  foreach(@allplayers, @player,
    for(assign(@i, 0), lt(@i, array_size(@list)), inc(@i),
      if(array_contains_ic(pgroup(@player), @list[@i][0]), 
        array_set(@list[@i], 2, sconcat(@list[@i][2], pinfo(@player, 4)))
        break()
      )
    )
  )
  for(assign(@i, 0), lt(@i, array_size(@list)), inc(@i),
    if(nequals(@list[@i][2], ''),
      msg(color(@list[@i][1]), @list[@i][0], color(7), ':', @list[@i][2])
    )
  )
<<<
*:/list = call_alias('/who')

# DICE ROLLING #
*:/roll [$sides=6]= >>>
  if($sides > 100, die(color('a').'[Dice] '.color('f').'There\'s a limit of 100 sides.'))
  if($sides < 2, die(color('a').'[Dice] '.color('f').'There\'s a minimum of 2 sides.'))
  if($sides == 2) {
    broadcast(color('a').'[Coin] '._colorname(player()).player().color('f').' flipped a coin and got '.if(rand(1) == 0, 'heads.', 'tails.'))
  } else {
    broadcast(color('a').'[Dice] '._colorname(player()).player().color('f').' rolled a '.color('a').(rand($sides) + 1).' on a '.$sides.'-sided die.')
  }
<<<

# MESSAGING #
*:/msg $player $ = >>>
  try(@player = player($player), @ex, die('Player not found.'))
  tmsg(@player, color(7).'(From '.player().'): '.color(r).$)
  msg(color(7).'(To '.@player.'): '.color(r).$)
  import(@conv)
  @conv[@player] = player()
  @conv[player()] = @player
  export(@conv)
<<<

*:/tell $player $ = call_alias('/msg' $player $)
*:/w $player $ = call_alias('/msg' $player $)

*:/r $ = >>>
  import(@conv)
  try(@player = @conv[player()], die('You do not have any current conversations.'))
  if(!ponline(@player), die('That player is no longer online.'))
  tmsg(@player, color(7).'(From '.player().'): '.color(r).$)
  msg(color(7).'(To '.@player.'): '.color(r).$)
  @conv[@player] = player()
  export(@conv)
<<<

# TELEPORTATION BETWEEN FRIENDS #
*:/join $player = >>>
  try(@player = player($player), die('Player not found.'))
  @blockedworlds = array('outworld', 'outworld_nether', 'outworld_the_end')
  if(array_contains(@blockedworlds, pworld()), die('You cannot teleport in this galaxy'))
  if(array_contains(@blockedworlds, pworld($player)), die('That player is out of reach.'))
  import(@requests)
  tmsg(@player, color(b).player().' has requested to join you. /accept')
  msg(color(b).'Request to join sent to '.@player.'.')
  @requests[@player] = array('join', player())
  export(@requests)
<<<

*:/invite $player = >>>
  try(@player = player($player), die('Player not found.'))
  @blockedworlds = array('outworld', 'outworld_nether', 'outworld_the_end')
  if(array_contains(@blockedworlds, pworld()), die('You cannot teleport in this galaxy'))
  if(array_contains(@blockedworlds, pworld($player)), die('That player is out of reach.'))
  import(@requests)
  tmsg(@player, color(b).player().' has requested that you join them. /accept')
  msg(color(b).'Invitation sent to '.@player.'.')
  @requests[@player] = array('invite', player())
  export(@requests)
<<<

*:/accept = >>>
  @blockedworlds = array('outworld', 'outworld_nether', 'outworld_the_end')
  if(array_contains(@blockedworlds, pworld()), die('You cannot teleport in this galaxy'))
  import(@requests)
  if(!array_index_exists(@requests, player()), die('There is nothing to accept.'))
  if(array_contains(@blockedworlds, pworld(@requests[player()][1])), die('That player is out of reach.'))
  if(!ponline(@requests[player()][1]), die('That player is no longer online.'))
  if(@requests[player()][0] == 'invite') {
    msg(color(b).'Teleporting to '.@requests[player()][1].' in 3 seconds...')
    tmsg(@requests[player()][1], color(b).'Teleporting '.player().' in 3 seconds...')
    _warmuptp(3, player(), ploc(@requests[player()][1]))
  } else {
    msg(color(b).'Teleporting '.@requests[player()][1].' in 3 seconds...')
    tmsg(@requests[player()][1], color(b).'Teleporting to '.player().' in 3 seconds...')
    _warmuptp(3, @requests[player()][1], ploc())
  }
  array_remove(@requests, player())
  export(@requests)
<<<

# Rename your worldguard region
*:/rg rename $from $to = >>>
  try(assign(@region, sk_region_info($from, pworld())), die('That region doesn\'t exist.'))
  if(not(array_contains_ic(@region[1], player())), die('You do not own this region.'))
  try(assign(@to, reg_match('[a-zA-Z0-9-]{1,32}', $to)[0]), die('You can only use alphanumeric and dash symbols.'))
  if(array_contains_ic(sk_all_regions(pworld()), @to), die('A region by that name already exists.'))
  sudo('/rg select' $from)
  sudo('/rg define' @to array_implode(@region[1]))
  sudo('/rg pri' @to @region[4])
  foreach(@region[3], @flag,
    sudo('/rg flag' @to @flag[0] @flag[1])
  )
  if(gt(array_size(@region[2]), 0), sudo('/rg addmember' @to array_implode(@region[2])))
  sudo('//sel')
  sudo('/rg remove' $from)
<<<

#Set or reset the MOTD
*:/setmotd [$=''] = >>>
  if(!has_permission('group.moderators'), die('You do not have permission to use this command.'))
  store_value('motd', colorize($))
  msg('MOTD set to: '.colorize($))
<<<

#Run commands as other players and show them which command it was
*:/runas $player $ = >>>
  if(!has_permission('group.administrators'), die('You do not have permission for this command'))
  try(assign(@player, player($player)), die('No player found.'))
  tmsg(@player, color(a), player(), ' ran this command for you:')
  tmsg(@player, color(6), $)
  scriptas(@player, 
    if(not(call_alias($)),
      sudo($)
    )
  )
<<<

/goto $player = >>>
  run('/tp' $player)
<<<

#Set fly mode for people or yourself
*:/fly $player $bool = >>>
  if(!has_permission('group.moderators'), die('You do not have permission to use this command.'))
  try(assign(@player, player($player)), @ex, die('Who is that? Are they online?'))
  if($bool == '1') {
    set_pflight(@player, 1)
    msg('Turned on fly mode for '.@player.'.')
    tmsg(@player, player().' turned on fly mode on you.')
  } else {
    set_pflight(@player, 0)
    msg('Turned off fly mode for '.@player.'.')
    tmsg(@player, player().' turned off fly mode on you.')
  }
<<<

*:/fly = >>>
  if((!array_contains(pgroup(), 'builders') || !array_contains(array('custom', 'dev'), pworld())) && !array_contains(pgroup(), 'moderators'), die('You do not have permission to use this command.'))
  if(phas_flight(),
    set_pflight(player(), 0)
    msg('Turned off flying.'),
    set_pflight(player(), 1)
    msg('Turned on flying.')
  )
<<<

#Game mode aliases
*:/gm $mode $player = >>>
  if(!has_permission('group.moderators'), die('You do not have permission to use this command.'))
  try(assign(@player, player($player)), @ex, die('Who is that? Are they online?'))
  run('/gamemode' $mode @player)
<<<

*:/gm [$mode] = >>>
  if((!array_contains(pgroup(), 'builders') || !array_contains(array('custom', 'dev'), pworld())) && !array_contains(pgroup(), 'moderators'), die('You do not have permission to use this command.'))
  if($mode) {
    switch($mode,
      1, set_pmode('CREATIVE'),
      0, set_pmode('SURVIVAL'),
      2, set_pmode('ADVENTURE'),
      msg('Acceptable values: 0 = survival, 1 = creative, 2, adventure.')
    )
  } else {
    if(pmode() == 'CREATIVE',
      set_pmode('SURVIVAL'),
      set_pmode('CREATIVE')
    )
  }
<<<

#Sign line edit script =D
*:/sign $line [$=''] = >>>
  if((!array_contains(pgroup(), 'builders') || !array_contains(array('custom', 'dev'), pworld())) && !array_contains(pgroup(), 'moderators'), die('You do not have permission to use this command.'))
  if( length($) > 15, die('There is a 15 character limit per line.'))
  assign(@sign, pcursor())
  if(!is_sign_at(@sign), die('That is not a sign'))
  assign(@lines, get_sign_text(@sign))
  array_set(@lines, $line - 1, colorize($))
  set_sign_text(@sign, @lines),
<<<

#Alias for setting people to Regulars group
*:/promote $player = >>>
  if(!has_permission('group.administrators'), die('You do not have permission to use this command.'))
  if(array_contains(pgroup($player), 'regulars'), die('Player is already in that group.'))
  run('/perm player setgroup' $player 'Regulars')
<<<

# COMMAND BLOCK COMMANDS #

*:/effect $player $effect [$strength=0] [$length=30] = >>>
  if(get_command_block() || (array_contains(pgroup(), 'builders') && array_contains(array('custom', 'dev'), pworld())) || array_contains(pgroup(), 'moderators')) {
    try(assign(@player, player($player)), @ex, die('Who is that? Are they online?'))
    assign(@effects, array('speed': '1', 'slowness': '2', 'haste': '3', 'fatique': '4', 'strength': '5', 'health': '6', 'damage': '7', 'jump': '8', 'nausea': '9', 'regen': '10', 'regeneration': '10', 'resistance': '11', 'fireresist': '12', 'fireresistance': '12', 'waterbreathing': '13', 'invis': '14','invisibility': '14', 'blindness': '15', 'nightvision': '16', 'hunger': '17', 'weakness': '18', 'poison': '19', 'wither': '20'))
    if(!array_index_exists(@effects, $effect), die('These are the available effect names: '.array_keys(@effects)))
    set_peffect(@player, @effects[$effect], $strength, $length)
  }
<<<

*:/velocity $player $x $y $z [$double] = >>>
  if(get_command_block() || array_contains(pgroup(), 'moderators') || (array_contains(array('dev', 'custom'), pworld($player)) && array_contains(pgroup(), 'builders'))) {
    try(assign(@player, player($player)), @ex, die('Who is that? Are they online?'))
    set_timeout(50, closure(
      set_pvelocity(@player, $x, $y, $z)
      make_effect(ploc(@player), 'MOBSPAWNER_FLAMES')
      make_effect(ploc(@player), 'BLAZE_SHOOT', 24)
      if($double, set_timeout($double, closure( set_pvelocity(@player, $x, $y, $z))))
    ))
  }
<<<

/tp $player $x $y $z = >>>
  if(get_command_block()) {
    set_ploc($player, $x, $y, $z)
  } else {
    run('/tp' $player $x $y $z)
  }
<<<

# TESTING/CONFIGURING COMMANDS

*:/display $ = >>>
  if((!array_contains(pgroup(), 'builders') || !array_contains(array('custom', 'dev'), pworld())) && !array_contains(pgroup(), 'moderators'), die('You do not have permission to use this command.'))
  if(length($) > 30, die('The name can only be 30 characters long.'))
  @inv = pinv(player(), null)
  @inv['meta']['display'] = colorize($)
  set_pinv(array(null: @inv))
<<<

*:/explosion $x $y $z $world $radius = >>>
  if((!array_contains(pgroup(), 'builders') || !array_contains(array('custom', 'dev'), pworld())) && !array_contains(pgroup(), 'moderators'), die('You do not have permission to use this command.'))
  explosion(array($x, $y, $z, $world), $radius)
<<<

*:/dye $r $g $b = >>>
  if((!array_contains(pgroup(), 'builders') || !array_contains(array('custom', 'dev'), pworld())) && !array_contains(pgroup(), 'moderators'), die('You do not have permission to use this command.'))
  if(is_leather_armor(pinfo(15))) {
    set_armor_color(pinfo(15), array($r, $g, $b))
  } else {
    msg('That slot isn\'t leather armor.')
  }
<<<

*:/enchant $type [$level=1] = >>>
  if((!array_contains(pgroup(), 'builders') || !array_contains(array('custom', 'dev'), pworld())) && !array_contains(pgroup(), 'moderators'), die('You do not have permission to use this command.'))
  enchant_inv_unsafe(null, $type, $level)
<<<

*:/unenchant = >>>
  if((!array_contains(pgroup(), 'builders') || !array_contains(array('custom', 'dev'), pworld())) && !array_contains(pgroup(), 'moderators'), die('You do not have permission to use this command.'))
  @item = pinv(player(), null)
  array_remove(@item, 'enchants')
  set_pinv(array(null: @item))
<<<

/setrider $horse $rider = >>>
  set_entity_rider(pinfo($horse, 13), pinfo($rider, 13))
<<<

# COIN COMMANDS #

*:/time $time = >>>
  if(pworld() == 'outworld', die('You cannot do this in the outworld.'))
  if(is_numeric($time) && ((array_contains(array('dev', 'custom'), pworld()) && array_contains(pgroup(), 'builders')) || has_permission('group.moderators'))) {
    msg('Set time to '.$time)
    set_world_time(pworld(), $time)
    die()
  }
  if(acc_balance(player()) < 1, die('You do not have any coins.'))
  switch($time
  , 'day',
    if(get_world_time() > 22300 || get_world_time() < 11300, die('It is already day time.'))
    if(get_world_time() > 13700 && get_world_time() < 22300) {
      set_world_time(22300)
    } else {
      assign(@time, get_world_time() - 11300)
      assign(@time, 700 - @time)
      if(@time < 0) {
        assign(@time, @time + 24000)
      }
      set_world_time(@time)
    }
    acc_subtract(player(), 1)
    msg(color('gold').'-1 coin')
    msg(color('aqua').'You made the sun rise.')
  , 'night',
    if(get_world_time() > 11300 && get_world_time() < 22300, die('It is already night time.'))
    if(get_world_time() > 700 && get_world_time() < 11300) {
      set_world_time(11300)
    } else {
      assign(@time, get_world_time() - 22300)
      assign(@time, 13700 - @time)
      if(@time > 24000) {
        set_world_time(@time - 24000)
      } else {
        set_world_time(@time)
      }
    }
    acc_subtract(player(), 1)
    msg(color('gold').'-1 coin')
    msg(color('aqua').'You made the sun set.')
  , #else
    msg('Accepts only \'time\' or \'day\'')
  )
<<<

*:/weather $type = >>>
  if(acc_balance(player()) < 1, die('You do not have any coins.'))
  if(pworld() == 'outworld', die('You cannot do this in the outworld.'))
  switch($type
  , 'stormy',
    storm(true)
    acc_subtract(player(), 1)
    msg(color('gold').'-1 coin')
    msg(color('aqua').'You summoned a storm.')
  , 'sunny',
    storm(false)
    acc_subtract(player(), 1)
    msg(color('gold').'-1 coin')
    msg(color('aqua').'You calmed the storm.')
  , #else 
    msg('Accepts \'stormy\' or \'sunny\'')
  )
<<<


