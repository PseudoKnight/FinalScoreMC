####################
# SIGN CHEST SHOPS #
####################
# This is a companion script for the PhysicalShop plugin. 
# It stores a cache of all stocked shops so that people can look them up.

*:/shop = >>>
	msg(color(6).'[Shop] Commands to list and edit shop signs.')
	msg('/shop edit <transaction> '.color('gray').'Edits a line on your shop')
	msg('Example: /shop edit buy 1 for 1g')
	msg('/shop list <item> '.color('gray').'Lists stocked shops for that item')
	msg('Example: /shop list diamond')
<<<

*:/shop edit = >>>
	msg(color(6).'[Shop] Edits a line on your shop that you\'re looking at.')
	msg('Example: '.color('gray').'"/shop edit buy 1 for 1g"')
<<<

*:/shop edit $transaction $ = >>>
	if(length($) > 11, die(color(6).'[Shop] There is a 15 character limit per line.'))
	@transaction = to_lower($transaction)
	if(@transaction == 'buy') {
		@shopline = array(1, 'Buy ')
	} else if(@transaction == 'sell') {
		@shopline = array(2, 'Sell ')
	} else {
		die(color(6).'[Shop] There is no Buy or Sell indicated in your command.')
	}
	@loc = pcursor()
	@loc = array(round(@loc[0]), round(@loc[1]), round(@loc[2]), @loc[3])
	
	try(@signtext = get_sign_text(@loc), die(color(6).'[Shop] There is no shop sign there.'))
	if(@signtext[3] != player(), die(color(6).'[Shop] You do not own this shop.'))
	
	if(!((length(@signtext[1]) > 7 && substr(@signtext[1], 0, 3) == 'Buy') 
	|| (length(@signtext[2]) > 8 && substr(@signtext[2], 0, 4) == 'Sell'))) {
		die(color(6).'[Shop] This doesn\'t look like a shop sign.')
	}
	
	@signtext[@shopline[0]] = @shopline[1].$
	set_sign_text(@loc, @signtext)
	msg(color(6).'[Shop] Successfully set to "'.@shopline[1].$.'"')
	
	include('includes.library/shops.ms')
	@itemid, _shop_item(@signtext[0])
	@shops, get_value('shop'. @itemid)
	if(!@shops, die())
	@t = @shopline[0] - 1
	for(@i = 0, @i < length(@shops[@t]), @i++) {
		if(@shops[@t][@i]['location'] == @loc) {
			if(@t == 0) {
				@count = _get_inventory_count(_relative(@loc, 'down'), reg_replace('\\.', ':', @itemid))
				if(@count < parse_args($)[0]) {
					array_remove(@shops[@t], @i)
				} else {
					@shops[@t][@i] = array('location': @loc, 'price': $, 'owner': @signtext[3], 'stock': @count)
				}
			} else {
				switch(substr($, length($) - 1)) {
				case 'g':
					@currency = '266'
				case 'i':
					@currency = '265'
				case 'd':
					@currency = '264'
				case 'e':
					@currency = '388'
				default:
					die()
				}
				@count = _get_inventory_count(_relative(@loc, 'down'), @currency.':0')
				@cost = parse_args($)[2]
				if(@count < substr(@cost, 0, length(@cost) - 1)) {
					array_remove(@shops[@t], @i)
				} else {
					@shops[@t][@i] = array('location': @loc, 'price': $, 'owner': @signtext[3], 'stock': @count)
				}
			}
			break()
		}
	}
	store_value('shop', @itemid, @shops)
<<<

*:/shop list = >>>
	msg(color(6).'[Shop] Lists stocked shops for an item.')
	msg('Example: '.color('gray').'"/shop list diamond"')
	msg('The location of each shop is shown as (x,y,z world) coordinates.')
	msg('You can see your current coordinates by pressing F3.')
<<<

# List available shop items
*:/shop list $ = >>>
	@item = reg_split('\\:', $)
	if(is_numeric(@item[0])) {
		if(array_index_exists(@item, 1)) {
			@itemid = @item[0].'.'.@item[1]
		} else {
			@itemid = @item[0]
		}
	} else {
		if(array_index_exists(@item, 1)) {
			@itemid = reg_split('\\:', data_values(@item[0]))[0].'.'.@item[1]
		} else {
			@itemid = reg_replace(':', '.', data_values(@item[0]))
			if(@itemid == null, die(color('red').'Unknown item name.'))
		}
	}
	@shops = get_value('shop', @itemid)
	if(!@shops) { 
		die(color('gold').'No stocked shops found for '.color('o').'"'.$.'"')
	} else {
		msg(color('gold').'Shops you can buy or sell '.color('o').'"'.$.'"')
		msg(color('gray').'-----------------------------------------------------')
	}
	foreach(@key: @shop in @shops[0]) {
		msg('Buy '.@shop['price'].color(7).' ('.@shop['stock'].') '.color('yellow').@shop['owner'].color(7).' '.@shop['location'][0].','.@shop['location'][1].','.@shop['location'][2].' '._worldname(@shop['location'][3]))
	}
	msg(color('gray').'-----------------------------------------------------')
	foreach(@key: @shop in @shops[1]) {
		msg('Sell '.@shop['price'].color(7).' ('.@shop['stock'].') '.color('yellow').@shop['owner'].color(7).' '.@shop['location'][0].','.@shop['location'][1].','.@shop['location'][2].' '._worldname(@shop['location'][3]))
	}
	msg(color('gray').'-----------------------------------------------------')
<<<

*:/shop delete $ = >>>
	@item = reg_split('\\:', $)
	if(is_numeric(@item[0])) {
		if(array_index_exists(@item, 1)) {
			@itemid = @item[0].'.'.@item[1]
		} else {
			@itemid = @item[0]
		}
	} else {
		if(array_index_exists(@item, 1)) {
			@itemid = reg_split('\\:', data_values(@item[0]))[0].'.'.@item[1]
		} else {
			@itemid = reg_replace(':', '.', data_values(@item[0]))
			if(@itemid == null, die())
		}
	}
	@shops = get_value('shop', @itemid)
	if(!@shops, die('No shops trading that.'))
	@loc = pcursor()
	@loc = array(round(@loc[0]), round(@loc[1]), round(@loc[2]), @loc[3])
	foreach(@key: @shop in @shops[0]) {
		if(@loc == @shop['location']) {
			array_remove(@shops[0], @key)
			store_value('shop', @itemid, @shops)
			die('Deleted.')
		}
	}
	foreach(@key: @shop in @shops[1]) {
		if(@loc == @shop['location']) {
			array_remove(@shops[1], @key)
			store_value('shop', @itemid, @shops)
			die('Deleted.')
		}
	}
<<<