# Set the command in the targeted command block (overwrites)
*:/scb [$] = >>>
	# Configure a set of allowed commands and aliases for non-ops
	@allowedcmds = array('/velocity', '/tp', '/sayas', '/testfor', '/playsound', '/setblock', '/tempcart',
		'/bedspawn', '/give', '/effect', '/warp', '/tellraw', '/testforblock', '/time', '/entitydata');

	if(!has_permission('command.cb'), die('You do not have permission.'))
	if(!$, die(color(gold).'Usage: /scb </command>'))
	if(!array_contains_ic(@allowedcmds, parse_args($)[0]), die('Allowed commands: '.array_implode(@allowedcmds)))
	foreach(@arg in parse_args($)) {
		if(@arg === '@a' || @arg === '@e') {
			die(color(red).'Cannot use unlimited @a or @e selectors. Please use ranges. eg. @a[r=8]');
		}
	}
	@block = pcursor(array(0, 8, 9, 27, 28, 50, 55, 63, 64, 65, 66, 68, 69,
		70, 71, 72, 75, 76, 77, 96, 131, 132, 143, 147, 148, 149, 150, 157))
	@blocktype = data_name(get_block_at(@block))
	if(@blocktype !== 'Command Block', die("You are looking at @blocktype. That is not a command block."))
	@cmd = $
	if(is_alias(@cmd), @cmd = '/runalias '.@cmd)
	set_block_command(@block, @cmd)
	msg('Command set: '.color('green').@cmd)
	msg(color('gold').'You can add to this command with /acb')
<<<

# Add to the command in the targeted command block
*:/acb [$] = >>>
	# Configure a set of allowed commands and aliases for non-ops
	@allowedcmds = array('/velocity', '/tp', '/sayas', '/testfor', '/playsound', '/setblock', '/tempcart',
		'/bedspawn', '/give', '/effect', '/warp', '/tellraw', '/testforblock', '/time', '/entitydata')

	if(!has_permission('command.cb'), die('You do not have permission.'))
	if(!$, die(color(gold).'Usage: /acb <additional parameters>'))
	foreach(@arg in parse_args($)) {
		if(@arg === '@a' || @arg === '@e') {
			die(color(red).'Cannot use unlimited @a or @e selectors. Please use ranges. eg. @a[r=8]');
		}
	}
	@block = pcursor(array(0, 8, 9, 27, 28, 50, 55, 63, 64, 65, 66, 68, 69,
		70, 71, 72, 75, 76, 77, 96, 131, 132, 143, 147, 148, 149, 150, 157))
	try {
		@cmd = get_block_command(@block);
	} catch(FormatException @ex) {
		die('You are looking at '.data_name(get_block_at(@block)).'. That is not a command block.');
	}
	@parts = parse_args(@cmd)
	if((@parts[0] === '/runalias' && array_contains_ic(@allowedcmds, @parts[1]))
	|| (array_size(@parts) > 1 && array_contains_ic(@allowedcmds, @parts[1]))) {
		set_block_command(@block, @cmd.' '.$)
		msg('Command set: '.color('green').@cmd.' '.$)
	} else {
		die('You are not allowed to add to this command.')
	}
<<<

# Add relative coordinates to the targeted command block.
# Uses WorldEdit selection position 1 (and 2 for when it's a /fill command)
*:/relcoords = >>>
	if(!has_permission('command.cb'), die('You do not have permission.'))
	@block = pcursor(array(0, 8, 9, 27, 28, 50, 55, 63, 64, 65, 66, 68, 69,
		70, 71, 72, 75, 76, 77, 96, 131, 132, 143, 147, 148, 149, 150, 157))
	try {
		@cmd = get_block_command(@block);
	} catch(FormatException @ex) {
		die('You are looking at '.data_name(get_block_at(@block)).'. That is not a command block.');
	}
	@loc1 = sk_pos1()
	@x1 = integer(@loc1[0] - @block['x'])
	@y1 = integer(@loc1[1] - @block['y'])
	@z1 = integer(@loc1[2] - @block['z'])
	@parts = parse_args(@cmd)
	if(array_contains_ic(@parts, '/fill')) {
		@loc2 = sk_pos2()
		@x2 = integer(@loc2[0] - @block['x'])
		@y2 = integer(@loc2[1] - @block['y'])
		@z2 = integer(@loc2[2] - @block['z'])
		set_block_command(@block, @cmd.' ~'.@x1.' ~'.@y1.' ~'.@z1.' ~'.@x2.' ~'.@y2.' ~'.@z2.' ')
	} else {
		set_block_command(@block, @cmd.' ~'.@x1.' ~'.@y1.' ~'.@z1.' ')
	}
<<<
