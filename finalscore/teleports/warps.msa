*:/warp [$] = >>>
	if(!$) {
		call_alias('/warps list');
		die();
	}

	@args = parse_args($);
	if(array_size(@args) == 2) {
		if(get_command_block()) {
			@player = @args[0];
			@warpid = @args[1];
		} else {
			die('You cannot teleport others.');
		}
	} else {
		 @player = player();
		 @warpid = @args[0];
	}

	@warp = get_value('warp.'.to_lower(@warpid));
	if(!@warp) {
		die('That warp does not exist.');
	}

	include('includes.library/teleports.ms');
	if(!_allows_teleports(pworld(@player))) {
		die('You cannot warp in this world.');
	}

	_warmuptp(@player, @warp, @warp[3] == 'custom');
<<<

*:/setwarp [$warp] = >>>
	if(!has_permission('group.moderator')) {
		die('You do not have permission to use this command.');
	}
	if(!$warp) {
		die('You need to specify a warp name.');
	}
	if(reg_count('\\w', $warp) < 0) {
		die('This needs to be in alphanumeric characters.');
	}
	@loc = ploc();
	@loc = array(round(@loc[0], 1), @loc[1], round(@loc[2], 1), @loc[3], floor(@loc[4]), floor(@loc[5]));
	if(has_value('warp.'.$warp)) {
		try(
			if(function_exists('dm_delete_marker')) {
				dm_delete_marker('warps', 'warp.'.$warp);
			}
		);
	}
	store_value('warp.'.$warp, @loc);
	if(function_exists('dm_create_marker')) {
		dm_create_marker('warps', array('id': 'warp.'.$warp, 'label': 'WARP.'.to_upper($warp), 'location': @loc, 'world': @loc[3], 'icon': 'star', 'persistent': true)); # radius is workaround for a bug
	}
	msg('Warp created.');
<<<

*:/warps [$cmd] [$id] = >>>
	switch($cmd) {
		case 'update':
			if(!has_permission('group.admin')) {
				die('You do not have permission to use this command.');
			}
			foreach(@key: @warp in get_values('warp')) {
				@newwarp = @warp['loc'];
				@newwarp[] = @warp['yaw'];
				@newwarp[] = @warp['pitch'];
				store_value(@key, @newwarp);
			}

		case 'del':
		case 'delete':
			if(!has_permission('group.moderator')) {
				die('You do not have permission to use this command.');
			}
			if(!$id) {
				die('This requires a warp name.');
			}
			if(!has_value('warp.'.$id)) {
				die('There is no warp by that name.');
			}
			clear_value('warp.'.$id);
			try(
				if(function_exists('dm_delete_marker')) {
					dm_delete_marker('warps', 'warp.'.$id);
				}
			);
			msg('Deleted warp.');

		case 'list':
			@warps = get_values('warp');
			@worlds = get_worlds();
			@warplist = associative_array();
			foreach(@world in @worlds) {
				@warplist[@world] = '';
			}
			foreach(@warpkey: @warpdata in @warps) {
				@warplist[@warpdata[3]] .= split('.', @warpkey)[1].' ';
			}
			msg(color('bold').'AVAILABLE WARPS:');
			foreach(@worldname: @worldwarps in @warplist) {
				if(@worldwarps) {
					msg(color(7).'['.to_upper(_worldname(@worldname)).'] '.color(15).@worldwarps);
				}
			}
		case 'resetmarkers':
			if(!has_permission('group.admin')) {
				die('You do not have permission to use this command.');
			}
			if(!function_exists('dm_all_markersets')) {
				die('Uneditable at this time.')
			}
			@markersets = array();
			if(function_exists('dm_all_markersets')) {
				@markersets = dm_all_markersets();
			}
			if(array_contains(@markersets, 'warps')) {
				if(function_exists('dm_delete_markerset')) {
					dm_delete_markerset('warps');
				}
			}

			if(function_exists('dm_create_markerset')) {
				dm_create_markerset('warps', array('label': 'Warps', 'persistent': true));
			}
			if(function_exists('dm_set_markerset_hide_by_default')) {
				dm_set_markerset_hide_by_default('warps', true);
			}

			@warps = get_values('warp');

			foreach(@name: @warp in @warps) {
				if(function_exists('dm_create_marker')) {
					dm_create_marker('warps', array('id': @name, 'label': to_upper(@name), 'location': @warp, 'world': @warp[3], 'icon': 'star', 'persistent': true));
				}
			}

			msg(color('green').'Done.');

		default:
			msg('Available sub-commands: "/warps del <warp>", "/warps list".');
	}
<<<
