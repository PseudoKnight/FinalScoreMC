*:/display $ = >>>
	if(!has_permission('command.display'), die('You do not have permission to use this command.'))
	if(length($) > 30, die('The name can only be 30 characters long.'))
	@inv = pinv(player(), null)
	if(is_null(@inv['meta']), @inv['meta'] = array())
	@inv['meta']['display'] = colorize($)
	set_pinv(array(null: @inv))
<<<

*:/lore $line $ = >>>
	if(!has_permission('command.lore'), die('You do not have permission to use this command.'))
	if(length($) > 30, die('The name can only be 30 characters long.'))
	@inv = pinv(player(), null)
	if(is_null(@inv['meta']), @inv['meta'] = array())
	if(!array_index_exists(@inv['meta'], 'lore') 
	|| is_null(@inv['meta']['lore'])) {
		@inv['meta']['lore'] = array()
	}
	@inv['meta']['lore'][$line - 1] = colorize($)
	set_pinv(array(null: @inv))
<<<	

*:/endercrystal = >>>
	if(!has_permission('group.moderators'), die('You do not have permission.'))
	@loc = _relative(pcursor(), 'up')
	set_block_at(@loc, '7:0')
	spawn_entity('ENDER_CRYSTAL', 1, array(@loc[0] + 0.5, @loc[1], @loc[2] + 0.5, @loc[3]))
<<<

*:/scb [$] = >>>
	if(!has_permission('group.builders'), die('You do not have permission.'))
	if(!$, die('Usage: /scb /cmd'))
	@allowedcmds = array('/velocity', '/tp', '/sayas', '/testfor', '/playsound', '/setblock', 
	'/tempcart', '/bedspawn', '/give', '/effect', '/warp', '/tellraw', '/testforblock', '/time')
	if(!array_contains_ic(@allowedcmds, parse_args($)[0]), die('Allowed commands: '.array_implode(@allowedcmds)))
	@block = pcursor()
	if(get_block_at(@block) != '137:0', die('That is not a commandblock.'))
	if(is_alias($), @cmd = '/runalias '.$, @cmd = $)
	set_block_command(@block, @cmd)
	msg('Command set: '.color('green').@cmd)
	msg(color('gold').'You can add to this command with /acb')
<<<

*:/acb [$] = >>>
	if(!has_permission('group.builders'), die('You do not have permission.'))
	if(!$, die('Usage: /acb /cmd'))
	@block = pcursor()
	if(get_block_at(@block) != '137:0', die('That is not a commandblock.'))
	@cmd = get_block_command(@block)
	if(!@cmd) {
		die('This command block is empty.')
	}
	@parts = parse_args(@cmd)
	@allowedcmds = array('/velocity', '/tp', '/sayas', '/testfor', '/playsound', '/setblock', 
	'/tempcart', '/bedspawn', '/give', '/effect', '/warp', '/tellraw', '/testforblock', '/time')
	if((@parts[0] == '/runalias' && array_contains_ic(@allowedcmds, @parts[1]))
	|| (array_size(@parts) > 1 && array_contains_ic(@allowedcmds, @parts[1]))) {
		set_block_command(@block, @cmd.' '.$)
		msg('Command set: '.color('green').@cmd.' '.$)
	} else {
		die('You are not allowed to add to this command.')
	}
<<<

*:/relativecoords = >>>
	if(!has_permission('group.builders'), die('No permission.'))
	@cmdblk = pcursor()
	try(@cmd = get_block_command(@cmdblk), die('Not a commandblock'))
	@loc1 = sk_pos1()
	@x1 = integer(@loc1[0] - @cmdblk['x'])
	@y1 = integer(@loc1[1] - @cmdblk['y'])
	@z1 = integer(@loc1[2] - @cmdblk['z'])
	@parts = parse_args(@cmd)
	if((array_size(@parts) > 0 && (@parts[0] == '/fill' || @parts[0] == 'fill')) || (array_size(@parts) > 1 && @parts[1] == '/fill')) {
		@loc2 = sk_pos2()
		@x2 = integer(@loc2[0] - @cmdblk['x'])
		@y2 = integer(@loc2[1] - @cmdblk['y'])
		@z2 = integer(@loc2[2] - @cmdblk['z'])
		set_block_command(@cmdblk, @cmd.' ~'.@x1.' ~'.@y1.' ~'.@z1.' ~'.@x2.' ~'.@y2.' ~'.@z2.' ')
	} else {
		set_block_command(@cmdblk, @cmd.' ~'.@x1.' ~'.@y1.' ~'.@z1.' ')
	}
<<<

*:/dye $r $g $b = >>>
	if(!has_permission('command.dye'), die('You do not have permission to use this command.'))
	if(pinv(player(), null) && is_leather_armor(pinfo(player(), 15))) {
		set_armor_color(pinfo(player(), 15), array(min(max($r, 0), 255), min(max($g, 0), 255), min(max($b, 0), 255)))
	} else {
		msg('That slot isn\'t leather armor.')
	}
<<<

*:/potion [$cmd] [$id] [$strength] [$seconds] = >>>
	if(!has_permission('command.potion'), die('You do not have permission to use this command.'))
	if(!$id, die('Usage: /potion <create|add> <potionEffect> <strength> <seconds>'))
	@effects = _get_effects()
	if(!array_index_exists(@effects, $id), die('Available potion effects: '.@effects))
	if(is_numeric($id), @id = $id, @id = @effects[$id])
	@effectdata = array(1: 2, 2: 10, 5: 9, 6: 5, 7: 12, 10: 1, 12: 3, 14: 14, 16: 6, 18: 8)
	if(array_index_exists(@effectdata, @id)) {
		@data = @effectdata[@id]
	} else {
		@data = 16
	}
	
	switch($cmd) {
	case 'add':
		@item = pinv(player(), null)
		if(@item['type'] != 373, die('You can only add potion effects to potions.'))
		if(!@item['meta'], @item['meta'] = array())
		if(!array_index_exists(@item['meta'], 'potions'), @item['meta']['potions'] = array())
		array_push(@item['meta']['potions'], array('id': @id, 'strength': $strength - 1, 'seconds': $seconds))
		set_pinv(array(null: @item))
	case 'create':
		set_pinv(array(null: array('type': 373, 'data': @data, 'meta': array('potions': array(array('id': @id, 'strength': $strength - 1, 'seconds': $seconds))))))
	default: 
		die('Usage: /potion <set|add> <potionEffect> <strength> <seconds>')
	}
<<<

*:/enchant [$type='list'] [$level=1] = >>>
	if(!has_permission('command.enchant'), die('You do not have permission to use this command.'))
	@enchants = array(
		'power': 'ARROW_DAMAGE',
		'flame': 'ARROW_FIRE',
		'infinity': 'ARROW_INFINITE',
		'punch': 'ARROW_KNOCKBACK',
		'sharpness': 'DAMAGE_ALL',
		'baneofarthropods': 'DAMAGE_ARTHROPODS',
		'smite': 'DAMAGE_UNDEAD',
		'efficiency': 'DIG_SPEED',
		'unbreaking': 'DURABILITY',
		'fireaspect': 'FIRE_ASPECT',
		'knockback': 'KNOCKBACK',
		'fortune': 'LOOT_BONUS_BLOCKS',
		'looting': 'LOOT_BONUS_MOBS',
		'respiration': 'OXYGEN',
		'protection': 'PROTECTION_ENVIRONMENTAL',
		'blastprotection': 'PROTECTION_EXPLOSIONS',
		'featherfalling': 'PROTECTION_FALL',
		'fireprotection': 'PROTECTION_FIRE',
		'projectileprotection': 'PROTECTION_PROJECTILE',
		'silktouch': 'SILK_TOUCH',
		'thorns': 'THORNS',
		'aquaaffinity': 'WATER_WORKER'
	)
	if($type == 'list', die(color('red').'Available enchantments: '.array_keys(@enchants)))
	if(!is_numeric($level), die('Usage: /enchant <type> <level>'))
	if(array_index_exists(@enchants, to_lower($type))) {
		enchant_inv_unsafe(null, @enchants[to_lower($type)], $level)
	} else {
		msg(color('red').'Unknown enchantment name. Available enchantments: '.array_keys(@enchants))
	}
<<<

*:/unenchant = >>>
	if(!has_permission('command.enchant'), die('You do not have permission to use this command.'))
	@item = pinv(player(), null)
	array_remove(@item, 'enchants')
	set_pinv(array(null: @item))
<<<

*:/sign $line [$=''] = >>>
	if(!has_permission('command.sign'), die('You do not have permission to use this command.'))
	if(length($) > 15, die('There is a 15 character limit per line.'))
	@sign = pcursor()
	if(!is_sign_at(@sign), die('That is not a sign'))
	@lines = get_sign_text(@sign)
	array_set(@lines, $line - 1, colorize($))
	set_sign_text(@sign, @lines),
<<<

# Item commands
*:/i [$item=0] [$amount=1] = >>>
	if(!has_permission('command.i'), die('You do not have permission to use this command.'))
	if($item == 0, die('Usage: /i [id:data] [quantity]'))
	@item = split(':', $item)
	if(!is_numeric(@item[0]), @item[0] = data_values(@item[0]))
	if(@item[0] == null, die('Unknown item name'))
	if(!array_index_exists(@item, 1), @item[1] = 0)
	pgive_item(@item[0].':'.@item[1], $amount)
	msg(color('yellow').'You\'ve been given '.$amount.' '.data_name(@item[0].':'.@item[1]).'.')
<<<

#Set fly mode for people or yourself
*:/fly $player $bool = >>>
	if(!has_permission('group.moderators'), die('You do not have permission to use this command.'))
	try(@player = player($player), @ex, die('Who is that? Are they online?'))
	if($bool == '1') {
		set_pflight(@player, 1)
		msg('Turned on fly mode for '.@player.'.')
		tmsg(@player, player().' turned on fly mode on you.')
	} else {
		set_pflight(@player, 0)
		msg('Turned off fly mode for '.@player.'.')
		tmsg(@player, player().' turned off fly mode on you.')
	}
<<<

*:/fly = >>>
	if(!has_permission('command.fly'), die('You do not have permission to use this command.'))
	if(phas_flight()) {
		set_pflight(player(), 0)
		msg('Turned off flying.')
	} else {
		set_pflight(player(), 1)
		msg('Turned on flying.')
	}
<<<

#Game mode aliases
*:/gamemode [$] = call_alias('/gm '.$)
*:/gm [$] = >>>
	if(!has_permission('command.gm'), die('You do not have permission to set game mode here.'))
	
	if($) {
		@args = parse_args($)
		try(@player = player(@args[0])
			if(@player != player() && !has_permission('command.gm.others')) {
				die('You do not have permission to set another\'s game mode.')
			} else if(pworld(@player) != pworld()) {
				die('You do not have permission to set another\'s game mode in another world.')
			}
			if(array_size(@args) >= 2) {
				@mode = @args[1]
			} else {
				@mode = 'toggle'
			}
		
		,
			if(is_numeric(@args[0])) {
				@player = player()
				@mode = @args[0]
			} else {
				die('Who is that? Are they online?')
			}
		)
	} else {
		@player = player()
		@mode = 'toggle'
	}
	

	
	switch(@mode) {
	case 0:
		@mode = 'SURVIVAL'
	case 1:
		@mode = 'CREATIVE'
	case 2:
		@mode = 'ADVENTURE'
	case 'toggle':
		if(pmode(@player) == 'SURVIVAL') {
			@mode = 'CREATIVE'
		} else {
			@mode = 'SURVIVAL'
		}
	default: 
		die('Unknown game mode.')
	}
	
	set_pmode(@player, @mode)
	if(@player != player(), msg('Set '.@player.'\'s game mode to '.@mode))
<<<

*:/setrider $horse $rider = >>>
	if(!has_permission('group.moderators'), die('You do not have permission to use this command.'))
	set_entity_rider(pinfo($horse, 13), pinfo($rider, 13))
<<<

*:/time $time = >>>
	if(!has_permission('command.time'), die('You do not have permission.'))
	msg('Set time to '.$time)
	try(
		set_world_time(pworld(), $time),
		msg('Usage: /time <day|night|0-24000>')
	)
<<<

*:/heal [$player] = >>>
	if(!has_permission('command.heal'), die('You do not have permission to do that here.'))
	if($player && !has_permission('command.heal.others'), die('You do not have permission to heal others.'))
	if(!$player) {
		@player = player()
	} else {
		if(!@player = player($player), die('Unknown player.'))
	}
	set_phunger(@player, 20)
	set_psaturation(@player, 5.0)
	set_phealth(@player, 20)
	tmsg(@player, color('green').'Healed!')
<<<