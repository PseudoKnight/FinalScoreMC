*:/mob [$cmd] [$id] [$setting] [$] = >>>
	if(!has_permission('command.mob'), die('You do not have permission.'))
	switch($cmd
	, 'set',
		@mob = get_value('mob.'.$id)
		if(!@mob, @mob = array())
		switch($setting
		, 'type',
			if(!_get_mob($), die('Unknown mob type.'))
			@mob['type'] = $
			msg('Type set.')
			
		, 'name',
			if(length($) > 64, die('Name is too long.'))
			@mob['name'] = colorize($)
			msg('Name set.')
			
		, 'age',
			if(!is_integral($), die('Must be a number.'))
			@mob['age'] = $
			msg('Age set.')
			
		, 'gear',
			@mob['gear'] = array(
				'WEAPON': pinv(player(), 0),
				'HELMET': pinv(player(), 103),
				'CHESTPLATE': pinv(player(), 102),
				'LEGGINGS': pinv(player(), 101),
				'BOOTS': pinv(player(), 100)			
			)
			msg('Gear set.')
			
		, 'droprate',
			@args = parse_args($)
			if(array_size(@args) == 1) {
				@mob['droprate'] = array(
					'WEAPON': @args[0], 
					'BOOTS': @args[0], 
					'LEGGINGS': @args[0],  
					'CHESTPLATE': @args[0], 
					'HELMET': @args[0]
				)
			} else {
				@mob['droprate'] = array(
					'WEAPON': @args[0], 
					'BOOTS': @args[1], 
					'LEGGINGS': @args[2],  
					'CHESTPLATE': @args[3], 
					'HELMET': @args[4]
				)
			}
			msg('Droprate set.')
			
		, 'effect',
			@args = parse_args($)
			if(!is_numeric(@args[0]), die('Must be numeric'))
			if(!array_index_exists(@mob, 'effects')) {
				@mob['effects'] = array()
			}
			if(@args[2] == 0) {
				foreach(@index: @effect in @mob['effects']) {
					if(@effect['id'] == @args[0]) {
						array_remove(@mob['effects'], @index)
						msg('Effect removed')
						break()
					}
				}
			} else {
				array_push(@mob['effects'], array(
					'id': @args[0],
					'strength': @args[1] - 1,
					'seconds': @args[2]
				))
				msg('Effect added')
			}
			
		, 'tags',
			@mob['tags'] = json_decode($)
			msg('Set the tags to '.$)
			
		, 'tame',
			if($) {
				@mob['tame'] = true
			} else if(array_index_exists(@mob, 'tame')) {
				array_remove(@mob, 'tame')
			}
			msg('Made mob tamed state to '.$)
			
		, 'rider',
			@mob['rider'] = $
			msg('Set mob rider to '.$)

		, 'explode',
			@args = parse_args($)
			if(array_size(@args) < 2, die('Must give two numbers: seconds till explode, explosion strength'))
			if(!is_numeric(@args[0]), die('Must give a number in seconds for the mob to explode.'))
			if(!is_numeric(@args[1]), die('Must give a number for the strength of explosion.'))
			if(@args[1] > 8, die('That explosion is too big.'))
			@mob['explode'] = @args
			msg('Set mob to explode after '.@args[0].' seconds with strength of '.@args[1])
			
		, 'onfire',
			if(!is_numeric($), die('Must be a number.'))
			if($ == 0 && array_index_exists(@mob, 'onfire')) {
				array_remove(@mob, 'onfire')
				msg('Mob will not spawn on fire.')
			} else {
				@mob['onfire'] = $
				msg('Mob will spawn on fire for '.$.' seconds.')
			}

		
		, 'health',
			@mob['health'] = $
			msg('Set health to '.$)
			
		, die('Available settings: type, name, gear, droprate, effect, health, tame, tags, rider, explode, onfire')
		)
		store_value('mob.'.$id, @mob)
		
	, 'delete',
		if($setting) {
			@mob = get_value('mob.'.$id)
			if($setting == 'effect', @setting = 'effects', @setting = $setting)
			array_remove(@mob, @setting)
			store_value('mob.'.$id, @mob)
			msg(@setting.' deleted from '.$id)
		} else {
			clear_value('mob.'.$id)
			msg('Custom mob deleted.')
		}
	
	, 'info',
		@mob = get_value('mob.'.$id)
		foreach(@mob, @setting, @value,
			msg(color('gray').@setting.' '.color('r').@value)
		)
	
	, 'spawn',
		@mobtype = $id
		if($setting) {
			@mobcount = $setting
		} else {
			@mobcount = 1
		}
		@loc = pcursor()
		_spawn_mob(@mobtype, @mobcount, array(
			@loc[0] + 0.5,
			@loc[1] + 1,
			@loc[2] + 0.5,
			@loc[3]
		), player())
	
	, 'list',
		@mobs = get_values('mob')
		@list = ''
		foreach(array_keys(@mobs), @key,
			@list .= split('.', @key)[1].' '
		)
		msg(color('gray').'CUSTOM MOBS: '.color('r').@list)
	,
		die('Usage: /mob <set|delete|info|spawn|list> [mobname] [setting] [value]')
	)
<<<

*:/summon $entity $x $y $z = >>>
	if(!@cmdblock = get_command_block(), die())
	if($x[0] == '~') {
		if($x == '~') {
			@x = @cmdblock['x']
		} else {
			@x = @cmdblock['x'] + substr($x, 1)
		}
	} else {
		@x = $x
	}
	if($y[0] == '~') {
		if($y == '~') {
			@y = @cmdblock['y']
		} else {
			@y = @cmdblock['y'] + substr($y, 1)
		}
	} else {
		@y = $y
	}
	if($z[0] == '~') {
		if($z == '~') {
			@z = @cmdblock['z']
		} else {
			@z = @cmdblock['z'] + substr($z, 1)
		}
	} else {
		@z = $z
	}
	spawn_mob($entity, 1, array(@x, @y, @z, @cmdblock['world']))
<<<