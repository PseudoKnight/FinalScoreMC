*:/survival = >>>
	if(_is_survival_world(pworld())) {
		die('You are already in survival.');
	}
	include('includes.library/teleports.ms');
	@pdata = _pdata(player());
	if(array_index_exists(@pdata, 'survival')
	&& array_index_exists(@pdata['survival'], 'loc')) {
		_warmuptp(player(), @pdata['survival']['loc']);
	} else {
		@loc = get_spawn('omega');
		@loc = array(@loc[0] + 0.5, @loc[1] - 1, @loc[2] + 0.5, @loc[3]);
		_warmuptp(player(), @loc);
	}
<<<

*:/park = >>>
	if(pworld() == 'custom') {
		die('You are already in Frog Park.');
	}
	include('includes.library/teleports.ms');
	@pdata = _pdata(player());
	if(array_index_exists(@pdata, 'minigames')
	&& array_index_exists(@pdata['minigames'], 'loc')) {
		_warmuptp(player(), @pdata['minigames']['loc'], false, true);
	} else {
		@loc = get_spawn('custom');
		@loc = array(@loc[0] + 0.5, @loc[1] - 1, @loc[2] + 0.5, @loc[3]);
		_warmuptp(player(), @loc);
	}
<<<

*:/dev = >>>
	if(pworld() == 'dev') {
		die('You are already in dev.');
	}
	include('includes.library/teleports.ms');
	@pdata = _pdata(player());
	if(array_index_exists(@pdata, 'dev')
	&& array_index_exists(@pdata['dev'], 'loc')) {
		_warmuptp(player(), @pdata['dev']['loc']);
	} else {
		@loc = get_spawn('dev');
		@loc = array(@loc[0] + 0.5, @loc[1] - 1, @loc[2] + 0.5, @loc[3]);
		_warmuptp(player(), @loc);
	}
<<<

*:/accept = >>>
	include('includes.library/teleports.ms');
	@requests = import('requests');
	if(!array_index_exists(@requests, player()) || @requests[player()][2] + 300000 < time()) {
		die('There is no request to accept from the last 5 minutes.');
	}
	if(!ponline(@requests[player()][1])) {
		die('That player is no longer online.');
	}
	if(@requests[player()][0] === 'invite') {
		if(!has_permission('command.join.from')) {
			die('You cannot do that from here.');
		}
		if(!has_permission(@requests[player()][1], 'command.join.to')) {
			@warps = get_values('warp');
			@closest = null;
			@closestDistance = 10000;
			@loc = ploc(@requests[player()][1]);
			foreach(@warp in @warps) {
				if(@warp[3] == @loc['world']) {
					@dist = sqrt(((@warp[0] - @loc[0]) ** 2) + ((@warp[2] - @loc[2]) ** 2));
					if(@dist < @closestDistance) {
						@closest = @warp;
						@closestDistance = @dist;
					}
				}
			}
			if(is_null(@closest)) {
				die('You cannot join a player in '._worldname(pworld(@requests[player()][1])));
			}
			_warmuptp(player(), @closest, @closest[3] == 'custom');
			die('Teleporting you near '.@requests[player()][1]);
		}
		msg(color('b').'Teleporting to '.@requests[player()][1].'...');
		tmsg(@requests[player()][1], color('b').'Teleporting '.player().'...');
		_warmuptp(player(), ploc(@requests[player()][1]));
	} else {
		if(!has_permission('command.join.to')) {
			die('You cannot do that from here.');
		}
		if(!has_permission(@requests[player()][1], 'command.join.from')) {
			die('That player is out of reach.');
		}
		msg(color('b').'Teleporting '.@requests[player()][1].'...');
		tmsg(@requests[player()][1], color('b').'Teleporting to '.player().'...');
		_warmuptp(@requests[player()][1], ploc());
	}
	array_remove(@requests, player());
	export('requests', @requests);
<<<

*:/autojoinaccept = >>>
	@pdata = _pdata(player());
	if(array_index_exists(@pdata, 'joinaccept')) {
		array_remove(@pdata, 'joinaccept');
		msg(colorize('Toggled auto-join-accept &c&loff&r.'));
	} else {
		@pdata['joinaccept'] = true;
		msg(colorize('Toggled auto-join-accept &a&lon&r.'));
	}
	_store_pdata(player(), @pdata);
<<<

/tp $player $x $y $z = >>>
	if(@cmdblk = get_command_block()) {
		if(@cmdblk['world'] != pworld($player)) {
			die('This commandblock cannot teleport players in other worlds.');
		}
		@loc = _relative_coords(ploc($player), $x, $y, $z);
		set_ploc($player, @loc);
	} else {
		run('/tp' $player $x $y $z);
	}
<<<


*:/goto $player = >>>
	if(!has_permission('group.moderator')) {
		die('You do not have permission.');
	}
	@player = _find_player($player);
	set_ploc(player(), ploc(@player));
<<<

*:/bring $player = >>>
	if(!has_permission('group.moderator')) {
		die('You do not have permission.');
	}
	@player = _find_player($player);
	set_ploc(@player, ploc());
<<<

*:/put $player = >>>
	if(!has_permission('group.moderator')) {
		die('You do not have permission.');
	}
	@loc = pcursor();
	@loc['x'] += 0.5;
	@loc[0] += 0.5;
	@loc['z'] += 0.5;
	@loc[2] += 0.5;
	@player = _find_player($player);
	set_ploc(@player, @loc);
<<<
