/*
	Lists the type and amount of events bound
*/
/bindcount = >>>
	@binds = dump_events();
	@list = associative_array();
	foreach(@bind in @binds) {
		@type = reg_match('\\((\\w+)\\).*', @bind)[1];
		if(array_index_exists(@list, @type)) {
			@list[@type] += 1;
		} else {
			@list[@type] = 1;
		}
	}

	foreach(@key: @value in @list) {
		msg(@key.': '.@value);
	}
<<<

/*
	Database namespace tools
*/
/namespace $action $namespace [$] = >>>
	if(!pisop(), die('You do not have permission.'))
	@data = get_values($namespace)
	if(array_size(@data) == 0, die('No keys for that namespace.'))
	switch($action) {
		case 'delete':
			foreach(@key: @value in @data) {
				clear_value(@key)
			}
			msg('Deleted '.$namespace)

		case 'rename':
			foreach(@key: @value in @data) {
				store_value(replace($namespace, $, @key), @data[@key])
				clear_value(@key)
			}
	}
<<<

/*
	Clean-up junk or redundant data in database
*/
/cleandatabase = >>>
	@players = get_values('uuids');
	foreach(@key: @pdata in @players) {
		// Remove survival state if player is in survival
		// Data is already stored in vanilla player file
		if(array_index_exists(@pdata, 'survival')
		&& array_index_exists(@pdata, 'world')
		&& @pdata['world'] != 'dev'
		&& @pdata['world'] != 'custom') {
			array_remove(@pdata, 'survival');
			store_value(@key, @pdata);
		}
	}
<<<
