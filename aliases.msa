/recompile [$args] [$] = >>>
	@clearGlobal = false; # -g clear all but protected exported global vars
	@clearProtected = false; # -p clear protected global vars
	@force = false; # -f force recompile even if games are running
	@message = '';
	if($args) {
		if($args[0] === '-') {
			foreach(@i in range(1, length($args))) {
				switch($args[@i]) {
					case 'g':
						@clearGlobal = true;
					case 'p':
						@clearProtected = true;
					case 'f':
						@force = true;
				}
			}
		} else {
			@message = $args.' ';
		}
	}
	if($) {
		@message .= $;
	}

	# check if a game is running before recompiling
	@activities = import('activities');
	if(@activities) {
		msg(color('gold').'Currently in progress: '.array_implode(@activities, ', '));
		if(!@force) {
			die(color('red').'Halted recompile due to games in progress.');
		} else {
			foreach(@activity in array_keys(@activities)) {
				export(string(@activity), null);
			}
			# if forcing a recompiles despite games running, we have to clear scoreboards
			@scoreboards = get_scoreboards();
			foreach(@scoreboard in @scoreboards) {
				if(@scoreboard !== 'main') {
					remove_scoreboard(@scoreboard);
				}
			}
		}
	}

	# If we're clearing global variables, let's store and restore some
	if(@clearGlobal && !@clearProtected) {
		@requests = import('requests');
		if(is_array(@requests)) {
			store_value('session.requests', @requests);
		}

		@conv = import('conv');
		if(is_array(@conv)) {
			store_value('session.conv', @conv);
		}

		@ignorelist = import('ignorelist');
		if(is_array(@ignorelist)) {
			store_value('session.ignorelist', @ignorelist);
		}

		@timers = import('timers');
		if(is_array(@timers)) {
			store_value('session.timers', @timers);
		}
	} else {
		export('recompile', true);
	}

	@start = time();
	run('/recompile -rf'.if(!@clearGlobal, 'g'));
	@stop = time();
	broadcast(color('yellow').'Recompiled scripts!'.if(@message, ' "'.@message.'"').' ('.round((@stop - @start) / 1000, 2).'s)');
	export('recompile', null);
<<<
