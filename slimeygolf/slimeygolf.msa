*:/slimeygolf = >>>
	include('basic.library/course.ms');
	include('basic.library/player.ms');
	include('basic.library/ball.ms');
	
	if(!(@loc = get_command_block())) {
		@loc = ploc();
	}
	if(_is_survival_world(@loc['world'])) {
		die('Not allowed in this world.');
	}
	
	if(!(@course = _get_course(@loc))) {
		die('No Slimey Golf course here.');
	}
	
	if(array_contains(get_scoreboards(), @course)) {
		die('This game is already active.')
	}
	
	@golf = array(
		course: array(name: @course, loc: array(0, 0, 0, @loc['world']), par: 0), 
		players: array(),
		spectators: array(),
	);
	
	_add_activity('golf'.@course, 'SlimeyGolf: '.to_upper(@course));
	create_scoreboard(@course);
	create_objective('strokes', 'DUMMY', @course);
	set_objective_display('strokes', array(displayname: color('a').'STROKES (PAR: 0)', slot: 'SIDEBAR'), @course);
	
	foreach(@player in all_players(@loc['world'])) {
		if(ponline(@player) && array_contains(sk_current_regions(@player), @course)
		&& _add_player(@player, @golf)
		&& array_size(@golf['players']) >= 4) {
			break();
		}
	}
	
	if(array_size(@golf['players']) == 0) {
		console('No players in SlimeyGolf, removing scoreboard...');
		remove_scoreboard(@course);
		_remove_activity('golf'.@course);
		die('No players in "slimeygolf" region.');
	}
	
	foreach(@player in array_keys(@golf['players'])) {
		tmsg(@player, colorize(
			'&a&lSLIMEY&6&lGOLF &a\u2308\u2328 \uFE52\u2328\u2309&r\n'
			.'&6&l[ How to Play ]&r\n'
			.'- Place slime ball on starting location.\n'
			.'- Right-click Slimey to start swing.\n'
			.'- Wait for desired strength and then hit Slimey into the hole.'
		));
	}
	
	# Physics defaults
	@bounciness = 0.75;
	
	# Place ball
	bind(player_interact, array(id: @course), array(item: 341, button: 'right', block: 159), @event, 
	@golf = @golf) {
		if(array_index_exists(@golf['players'], player())
		&& @event['action'] == 'right_click_block'
		&& @event['facing'] == 'up'
		&& split(':', get_block_at(@event['location']))[1] == @golf['players'][player()]['hole'] + 5) {
		
			@ball = @golf['players'][player()];
		
			set_pinv(player(), array('null': null));
			set_pexp(player(), 0);
			
			if(_ball_exists(@ball['id'])) {
				_remove_ball(@ball['id']);
				unbind('golf_swing_'.player());
				unbind('golf_hit_'.player());
			} else {
				set_plevel(player(), 0);
			}
			
			if(@ball['type'] == 0 || @ball['type'] == 2) {
				@mobtype = 'SLIME';
				@mobcheck = 'SLIME';
			} else {
				@mobtype = 'MAGMACUBE';
				@mobcheck = 'MAGMA_CUBE';
			}

			_place_ball(@mobtype, @event['location'], @ball);
			
			@lowesthole = 10;
			foreach(@player in @golf['players']) {
				if(@player['hole'] < @lowesthole) {
					@lowesthole = @player['hole'];
				}
			}
			if(@lowesthole == @ball['hole']) {
				@golf['course']['loc'][0] = @event['location']['x'];
				@golf['course']['loc'][1] = @event['location']['y'] - 2;
				@golf['course']['loc'][2] = @event['location']['z'];
				set_block_at(@golf['course']['loc'], 152);
			} else {
				set_block_at(_relative(@event['location'], 'down', 2), 152);
			}
			
			# par for this hole
			if(!array_index_exists(@golf['course'], @ball['hole'])) {
				@par = split(':', get_block_at(_relative(@event['location'], 'down', 1)))[1];
				@golf['course'][@ball['hole']] = @par;
				@golf['course']['par'] += @par;
				set_objective_display('strokes', array(displayname: color(10).'STROKES (PAR: '.@golf['course']['par'].')',
					slot: 'SIDEBAR'), @golf['course']['name']);
			}
			
			bind(player_interact_entity, array(id: 'golf_swing_'.player()), array(clicked: @mobcheck), @event, 
			@player = player(), @golf = @golf) {
				if(@player != player(), die());
				@ball = @golf['players'][player()];
				if(@event['id'] != @ball['id'], die());
				cancel();
				if(!@ball['swing']) {
					set_pexp(0);
					@ball['swing'] = true;
					set_interval(50, closure(){
						if(pexp() < 115 && @ball['swing']) {
							set_pexp(pexp() + 5);
						} else {
							clear_task();
							@ball['swing'] = false;
							set_pexp(0);
						}
					});
				}
			}
			
			bind(entity_damage, array(id: 'golf_hit_'.player()), array(id: @ball['id'], cause: 'ENTITY_ATTACK'), @event, 
			@golf = @golf) {
				if(!array_index_exists(@golf['players'], @event['damager'])) {
					cancel()
					die()
				}
				@xp = pexp(@event['damager']);
				@player = @event['damager'];
				@ball = @golf['players'][@player];
				if(@xp > 0 && @ball['swing']
				&& @ball['id'] == @event['id']) {
					@ball['swing'] = false;
					@xp = max(1, @xp - 10);
					set_pexp(@player, @xp);
					set_plevel(@player, plevel(@player) + 1);
					set_pscore('strokes', @player, get_pscore('strokes', @player, @golf['course']['name']) + 1, 
						@golf['course']['name']);
					play_sound(entity_loc(@event['id']), array('sound': 'WOOD_CLICK', 'pitch': 2 - (1.3 / @xp)));
					set_timeout(50, closure(){
						@v = entity_velocity(@event['id']);
						@v['x'] = @v['x'] * (3 * (@xp / 100));
						@v['z'] = @v['z'] * (3 * (@xp / 100));
						@ball['velocity'] = array('x': @v['x'], 'y': 0, 'z': @v['z']);
						set_entity_velocity(@event['id'], @ball['velocity']);
					})
					set_pinv(@player, array(0: array('type': 341)));
				} else {
					cancel();
				}
				# cancel()
				# @ploc = ploc(@event['damager'])
				# @eloc = entity_loc(@event['id'])
				# @x = (@eloc['x'] - @ploc['x']) * (@xp / 200)
				# @z = (@eloc['z'] - @ploc['z']) * (@xp / 200)
				# set_entity_velocity(@event['id'], array(@x, 0, @z))
			}
		}
	}
	
	# Re-target slimes to owner
	bind(target_player, array('id': @course.'_target'), null, @event, @golf = @golf) {
		if((@event['mobtype'] == 'SLIME' || @event['mobtype'] == 'MAGMA_CUBE')
		&& (!array_index_exists(@golf['players'], @event['player'])
		|| @golf['players'][@event['player']]['id'] != @event['id'])) {
			foreach(@player: @ball in @golf['players']) {
				if(@ball['id'] == @event['id']) {
					modify_event('player', @player);
					break();
				}
			}
		}
	}
	
	set_interval(50, closure(){
		foreach(@player in all_players(@golf['course']['loc'][3])) {
			if(!array_index_exists(@golf['players'], @player)) {
				if(array_contains(sk_current_regions(@player), @course)) {
					if(array_size(@golf['players']) < 4) {
						_add_player(@player, @golf);
					} else if(!array_contains(@golf['spectators'], @player)) {
						if(function_exists('set_collides_with_entities')) {
							set_collides_with_entities(@player, false);
						}
						@golf['spectators'][] = @player;
					}
				} else if(array_contains(@golf['spectators'], @player)) {
					if(function_exists('set_collides_with_entities')) {
						set_collides_with_entities(@player, true);
					}
					array_remove_values(@golf['spectators'], @player);
				}
				continue();
			}
			@ball = @golf['players'][@player];
			if(_ball_exists(@ball['id'])) {
				@setvelocity = true;
				@v = entity_velocity(@ball['id']);
				@loc = entity_loc(@ball['id']);
				@loc['y'] -= 1;
							
				@block = get_block_at(@loc);
				if(@block[0] != '0' && @v['y'] >= -0.0784000015258789) {
					if(@loc['y'] - floor(@loc['y']) == 0) {
						# if ball dropped into the hole
						if(@block == '35:15') {
							# check for birdie/eagle
							@hits = plevel(@player);
							@par = @golf['course'][@ball['hole']];
							if(@hits == @par - 1) {
								# BIRDIE
								launch_firework(@loc, 
									array(strength: 0, trail: true, type: 'BURST'));
								play_sound(ploc(@player), array(sound: 'VILLAGER_YES'));
							} else if(@hits <= @par - 2) {
								# EAGLE
								launch_firework(@loc, 
									array(strength: 0, trail: true, type: 'BALL_LARGE'));
								play_sound(ploc(@player), array(sound: 'VILLAGER_YES'));
							} else if(@hits > @par) {
								play_sound(ploc(@player), array(sound: 'VILLAGER_NO'));
							}
						
							# clean up the hole for this player
							_remove_ball(@ball['id']);
							unbind('golf_swing_'.@player);
							unbind('golf_hit_'.@player);
							
							# check if last player to leave hole
							@lastplayer = true;
							foreach(@p: @b in @golf['players']) {
								if(@p != @player
								&& @b['hole'] <= @ball['hole']) {
									@lastplayer = false;
									break();
								}
							}
							if(@lastplayer) {
								set_block_at(@golf['course']['loc'], 0);
								# check if last hole
								if(@ball['hole'] == 9) {
									@end = true;
									foreach(@p: @b in @golf['players']) {
										if(@b['hole'] <= 9 && @p != @player) {
											@end = false;
											break();
										}
									}
									if(@end) {
										@loweststrokes = 999;
										@winner = '';
										foreach(@p: @b in @golf['players']) {
											if(ponline(@p)) {
												if(function_exists('set_collides_with_entities')) {
													set_collides_with_entities(@p, true);
												}
												@world = pworld(@p);
												if(@world == 'dev' || @world == 'custom') {
													_clear_pinv(@p);
												}
												@strokes = get_pscore('strokes', @p, @course);
												if(@strokes < @loweststrokes) {
													@winner = @p;
													@loweststrokes = @strokes;
												}
											}
										}
										foreach(@p in @golf['spectators']) {
											if(function_exists('set_collides_with_entities')) {
												set_collides_with_entities(@p, true);
											}
										}
										
										_regionmsg(@course, colorize(
											'&a&lSLIMEY&6&lGOLF &a\u2308\u2328 \uFE52\u2328\u2309&r\n'
											._colorname(@winner).'&l'.@winner.'&r&l is the winner!'
										))
										
										if(array_size(@golf['players']) > 1) {
											_acc_add(@winner, 1);
										}
										
										unbind(@course);
										unbind(@course.'_target')
										set_timeout(10000, closure(){
											if(array_contains(get_scoreboards(), @course)) {
												remove_scoreboard(@course);
												_remove_activity('golf'.@course);
											}
										});
										clear_task();
										break();
									}
								}
							}
							
							# prepare player for next hole
							@ball['hole'] += 1;
							@ball['id'] = 0;
							@setvelocity = false;
						}
					} else {
						@loc['y'] = floor(@loc['y']) + 1;
						set_entity_loc(@ball['id'], @loc);
					}
					@v['y'] = 0;
				} else if(@block == '35:15') {
					play_sound(@loc, array('sound': 'WOOD_CLICK', 'pitch': 0.5 + @loc['y'] - floor(@loc['y'])));
				}
				
				if(@setvelocity) {
				
					@ricochetPitch = 0
					@forceX = 0;
					if(@v['x'] == 0) {
						@forceX = abs(@ball['velocity']['x']);
						if(@forceX < 0.001) {
							@v['x'] = 0;
						} else {
							@v['x'] = 0 - @ball['velocity']['x'] * @bounciness;
							if(@forceX > 0.05) {
								@ricochetPitch = 1 + @forceX / 2;
							}
						}
					}
					
					if(@v['z'] == 0) {
						@forceZ = abs(@ball['velocity']['z']);
						if(@forceZ < 0.001) {
							@v['z'] = 0;
						} else {
							@v['z'] = 0 - @ball['velocity']['z'] * @bounciness;
							if(@forceZ > 0.06 && @forceZ > @forceX) {
								@ricochetPitch = 1 + @forceZ / 2;
							}
						}
					}
					
					if(@ricochetPitch > 1) {
						play_sound(@loc, array('sound': 'WOOD_CLICK', 'pitch': min(2, @ricochetPitch)));
					}
					
					@ball['velocity'] = array('x': @v['x'], 'y': @v['y'], 'z': @v['z']);
					set_entity_velocity(@ball['id'], @ball['velocity']);
					if(@ball['type'] >= 2) {
						play_entity_effect(@ball['id'], 'HURT');
					}
				}
				
			} else if(!ponline(@player)
			|| !array_contains(sk_current_regions(@player), @course)) {
				_remove_player(@player, @golf);
				_remove_ball(@ball['id']);
				if(array_size(@golf['players']) == 0) {
					console('Last player left SlimeyGolf, stopping.');
					unbind(@course);
					unbind(@course.'_target');
					if(array_contains(get_scoreboards(), @course)) {
						remove_scoreboard(@course);
						_remove_activity('golf'.@course);
					}
					clear_task();
					break();
				}
			}
			
		} else {
			console('No players left in world, stopping SlimeyGolf.');
			unbind(@course);
			unbind(@course.'_target');
			if(array_contains(get_scoreboards(), @course)) {
				_remove_activity('golf'.@course);
				remove_scoreboard(@course);
			}
			clear_task();
		}
	});
<<<