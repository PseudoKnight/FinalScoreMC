*:/class [$cmd] [$id] [$setting] [$] = >>>
if(!has_permission('group.builders'), die('You do not have permission.'))
if($, @args = parse_args($), @args = array())
array_resize(@args, 3)
switch($cmd) {
case 'set':
	@class = get_value('class.'.$id)
	if(!@class, @class = array())
	switch($setting) {
	case 'selector':
		if(!pinv(player(), null), die('You must select an item on your hotbar.'))
		@class['selector'] = pinv(player(), null)
		msg('Class selector set to this item.')
	
	case 'kit':
		@inv = pinv()
		foreach(array_keys(@inv), @slot) {
			if(@inv[@slot] == null) {
				array_remove(@inv, @slot)
			}
		}
		@class['kit'] = @inv
		msg('Set kit to current inventory.')
		
	case 'effect':
		@effects = _get_effects()
		if(!array_contains(array_keys(@effects), @args[0]), die('Unknown potion effect. '.array_keys(@effects)))
		@effect = @effects[@args[0]]
		if(!array_index_exists(@class, 'effect'), @class['effect'] = associative_array())
		if(@args[1] && @args[2]) {
			if(@args[1] == 0 || @args[2] == 0) {
				array_remove(@class['effect'], @effect)
				if(array_size(@class['effect']) == 0) {
					array_remove(@class, 'effect')
				}
				msg('Removed potion effect '.@args[0].'.')
			} else {
				@class['effect'][@effect] = associative_array('strength': @args[1] - 1, 'length': @args[2])
				msg('Set a potion effect for this class: '.@args[0].' with a strength of '.@args[1].' and a length of '.@args[2].' seconds.')
			}
		} else {
			die('Requires a strength integer and a length integer in seconds.')
		}
		
	default:
		die('Available settings: selector, kit, effect')
	}
	store_value('class.'.$id, @class)
	
case 'delete':
	if($setting) {
		@class = get_value('class.'.$id)
		array_remove(@class, $setting)
		store_value('class.'.$id, @class)
		msg($setting.' deleted from '.$id)
	} else {
		clear_value('class.'.$id)
		msg('Class deleted.')
	}

case 'info':
	@class = get_value('class.'.$id)
	foreach(@class, @setting, @value) {
		msg(color('gray').@setting.' '.color('r').@value)
	}
	
case 'rename':
	if(!$id || !$setting, die('Usage: /class rename <classname> <newclassname>'))
	@class = get_value('class.'.$id)
	if(!@class, die('No class by that name.'))
	store_value('class.'.to_lower($setting), @class)
	clear_value('class.'.$id)
	msg('Changed '.$id.' class name to '.to_lower($setting))
	
case 'load':
	include('includes.library/class.ms')
	_class('load', player(), $id)
	
case 'unload':
	include('includes.library/class.ms')
	_class('unload', player(), $id)
	
case 'equip':
	include('includes.library/class.ms')
	_class('equip', player(), $id)
	
case 'list':
	@classes = get_values('class')
	@list = ''
	foreach(array_keys(@classes), @key) {
		@list .= split('.', @key)[1].' '
	}
	msg(color('gray').'CLASSES: '.color('r').@list)
	
default:
	die('Usage: /class [set|delete|info|load|unload|equip|list] [classname] [setting] [value[s]]')
}
<<<